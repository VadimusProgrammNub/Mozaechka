      void Raskl(int Wkv1, int Hkv1)  //метод рандомного перемешивания
        {
            rand = new PictureBox[Kol_W, Kol_H];    //указываем размер массива
            bool[,] prov = new bool[Kol_W, Kol_H];  // проверочная переменная, для исключения повторов и наложений
            int m = 0, n = 0;   //переменные в которых вычисляется рандомные значения для расположения частей в массиве

            for (int i = 0; i < Kol_W; i++) //инициализируем массив для рандомного расположения части по строке, каждой последующей части 
            {
                for (int j = 0; j < Kol_H; j++) //инициализируем массив для рандомного расположения части по столбцу, каждой последующей части 
                {
                    do  //выполнять цикл, пока while не примет значение false
                    {                         
                        Random random = new Random();   //переменная рандома
                        m = random.Next() % Kol_W;  //вычисляем строку, в которой будет находится элемент через операцию MOD, т.е. по модулю в массиве
                        n = random.Next() % Kol_H;  //вычисляем столбец, в которой будет находится элемент через операцию MOD, т.е. по модулю в массиве
                        int str = m * Wkv1; //вычисляем расположение элемента в PictureBox, координаты
                        int stol = n * Hkv1;
                        if (rand[m, n] == null) //если вычисленный элемент массива пуст
                        {
                            Puzz[i, j].Location = new Point(str, stol); //прорисовать его в этом месте по ранее определенным координатам
                            rand[m, n] = Puzz[i, j];    //приравнять этот элемент массива рандом, к элементу массива, где части последовательны
                            prov[i, j] = true;  //последовательно задаем true каждому элементу проверочного массива
                        }
                    } while (prov[i, j] != true);
                    rand[m, n].MouseClick += new MouseEventHandler(pictureBox1_MouseClick);  //каждый элемент массива воспринимает клик, как событие над ним           
                }
            }
            pictureBox1.Image = null;
            Pvo = new PictureBox[Kol_W, Kol_H];

        }
        void Moved(PictureBox F, PictureBox S)   //метод перемещения частей разла
        {

            int X1=0, Y1=0, X2=0, Y2=0; //переменные координат двух частей
            for (int i = 0; i < Kol_W; i++) //инициализируем массив для выяснения разположения каждой части по строке
            {
                for (int j = 0; j < Kol_H; j++) //инициализируем массив для выяснения разположения каждой части по столбцу
                {
                    if (rand[i, j] == F) //если часть, захваченная в первый клик соответствует какому - то значению в массиве
                    {
                        X1 = i; //узнаем расположение захваченной части в первый клик в массиве
                        Y1 = j;
                    }
                    if (rand[i, j] == S)//если часть, захваченная во второй клик соответствует какому - то значению в массиве
                    {
                        X2 = i;//узнаем расположение захваченной части во второй клик в массиве
                        Y2 = j;
                    }
                    ////if (rand[i,j].Image == Puzz[i,j].Image)
                    ////    Pvo[i, j] = Puzz[i, j];
                }
            }
